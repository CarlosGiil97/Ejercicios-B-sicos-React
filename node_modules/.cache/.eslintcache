[{"C:\\xampp\\htdocs\\ejercicios-basicos\\src\\index.js":"1","C:\\xampp\\htdocs\\ejercicios-basicos\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\ejercicios-basicos\\src\\App.js":"3","C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudApp.js":"4","C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudForm.js":"5","C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudTable.js":"6","C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudTableRow.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":229,"mtime":1624559176775,"results":"11","hashOfConfig":"9"},{"size":2166,"mtime":1624722669519,"results":"12","hashOfConfig":"9"},{"size":1823,"mtime":1624646691742,"results":"13","hashOfConfig":"9"},{"size":798,"mtime":1624644862411,"results":"14","hashOfConfig":"9"},{"size":495,"mtime":1624645053390,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"u348ms",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\xampp\\htdocs\\ejercicios-basicos\\src\\index.js",[],["33","34"],"C:\\xampp\\htdocs\\ejercicios-basicos\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\ejercicios-basicos\\src\\App.js",[],"C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudApp.js",[],"C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudForm.js",["35"],"import React,{useState,useEffect} from 'react'\r\n\r\nlet color = \"red\";\r\n//se declaran como arrancan los values del form\r\nconst initialForm = {\r\n    name:\"\",\r\n    dorsal:\"\",\r\n    id:null,\r\n}\r\n\r\nconst CrudForm = ({createData,updateData,dataToEdit,setDataToEdit}) => {\r\n\r\n    const [form, setForm] = useState({initialForm});\r\n\r\n    useEffect(() => {\r\n        if(dataToEdit){\r\n            setForm(dataToEdit);\r\n\r\n        }else{\r\n            setForm(initialForm);\r\n        }\r\n    },\r\n    [dataToEdit]\r\n    )\r\n\r\n    //los 3 eventos necesasrios para el formulario\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]:e.target.value,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!form.name || !form.dorsal){\r\n            alert(\"Datos incompletos\");\r\n            return;\r\n        }\r\n\r\n        if(form.id === null){\r\n            createData(form);\r\n        }else{\r\n            updateData(form);\r\n        }\r\n\r\n        handleReset();\r\n    }\r\n\r\n    const handleReset = (e) => {\r\n        //para limpiar el formulario se inicializa a como estaba al principio\r\n        setForm(initialForm);\r\n        setDataToEdit(null);    \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <h3>{dataToEdit ? \"Modificar\" : \"Agregar\"}</h3>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Nombre\" value={form.name} onChange={handleChange}/>\r\n                <input type=\"text\" name=\"dorsal\" placeholder=\"Dorsal\" value={form.dorsal} onChange={handleChange}/>\r\n                <input type=\"submit\" value=\"Enviar\" />\r\n                <input type=\"reset\" value=\"Limpiar\" onClick={handleReset} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudForm\r\n","C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudTable.js",[],"C:\\xampp\\htdocs\\ejercicios-basicos\\src\\components\\CrudTableRow.js",["36"],"import React from 'react';\r\nimport CrudTable from './CrudTable';\r\n\r\nconst CrudTableRow = ({el,setDataToEdit,deleteData}) => {\r\n    let {name,dorsal,id} = el;\r\n    \r\n    return (\r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{dorsal}</td>\r\n            <td>\r\n                <button onClick={() => setDataToEdit(el)}>Editar</button>\r\n                <button onClick={() => deleteData(id)}>Eliminar</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CrudTableRow\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":5,"nodeType":"43","messageId":"44","endLine":3,"endColumn":10},{"ruleId":"41","severity":1,"message":"45","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":17},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","'CrudTable' is defined but never used.","no-global-assign","no-unsafe-negation"]